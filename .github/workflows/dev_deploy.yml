name: Love Keeper CI/CD Pipeline

on:
  push:
    branches: [ develop ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make application.yml
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml
        shell: bash

      - name: Make firebase-service-account.json
        run: |
          cd ./src/main/resources
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > ./firebase-service-account.json
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build -x test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t lovekeeper-app:${{ github.sha }} .
          docker tag lovekeeper-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/lovekeeper-app:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/lovekeeper-app:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          TAG: ${{ github.sha }}
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          # docker-compose.yml과 Dockerfile 전송
          scp -i private_key.pem -o StrictHostKeyChecking=no docker-compose.yml $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/docker-compose.yml
          scp -i private_key.pem -o StrictHostKeyChecking=no Dockerfile $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/Dockerfile
          
          # EC2에서 Docker Compose 실행 및 Redis 상태 확인
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "
            # 기존 컨테이너와 볼륨 삭제
            docker-compose -f /home/$EC2_USERNAME/docker-compose.yml down -v
          
            # 새 이미지 풀 및 빌드
            docker pull ${{ secrets.DOCKER_USERNAME }}/lovekeeper-app:${{ github.sha }}
            docker-compose -f /home/$EC2_USERNAME/docker-compose.yml up -d --build
          
            # Redis가 준비될 때까지 대기 및 마스터 설정
            for i in {1..10}; do
              if docker exec lovekeeper-redis redis-cli ping | grep -q PONG; then
                docker exec lovekeeper-redis redis-cli SLAVEOF NO ONE
                sleep 5
                ROLE_STATUS=\$(docker exec lovekeeper-redis redis-cli INFO REPLICATION | grep 'role:')
                if [[ \$ROLE_STATUS != *'role:master'* ]]; then
                  echo 'Failed to set Redis as master!'
                  exit 1
                fi
                echo 'Redis is running as master.'
                break
              fi
              echo 'Waiting for Redis to be ready... Attempt \$i'
              sleep 5
            done
            if [[ \$i -eq 10 ]]; then
              echo 'Redis failed to start after 50 seconds!'
              exit 1
            fi
          "
          
          rm -f private_key.pem