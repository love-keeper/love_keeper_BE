name: LoveKeeper Dev CI/CD

on:
  pull_request:
    types: [ closed ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: |
          ./gradlew clean bootJar --info
          echo "Checking build output:"
          find build -name "*.jar" -type f
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      # Firebase 설정 파일 생성
      - name: Create Firebase config
        run: |
          cat > firebase-service-account.json << 'EOL'
          {
            "type": "service_account",
            "project_id": "${{ secrets.FIREBASE_PROJECT_ID }}",
            "private_key_id": "${{ secrets.FIREBASE_PRIVATE_KEY_ID }}",
            "private_key": "${{ secrets.FIREBASE_PRIVATE_KEY }}",
            "client_email": "${{ secrets.FIREBASE_CLIENT_EMAIL }}",
            "client_id": "${{ secrets.FIREBASE_CLIENT_ID }}",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://oauth2.googleapis.com/token",
            "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
            "client_x509_cert_url": "${{ secrets.FIREBASE_CLIENT_CERT_URL }}",
            "universe_domain": "googleapis.com"
          }
          EOL
        shell: bash

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          
          # JAR 파일 찾기 및 복사
          JAR_FILE=$(find build -name "*.jar" -type f | head -n 1)
          if [ -n "$JAR_FILE" ]; then
            echo "Found JAR file: $JAR_FILE"
            cp "$JAR_FILE" deploy/application.jar
          else
            echo "Error: No JAR file found after build"
            exit 1
          fi
          
          # 필요한 파일 복사
          cp docker-compose.yml deploy/docker-compose.yml
          cp Dockerfile deploy/Dockerfile
          cp Dockerrun.aws.json deploy/Dockerrun.aws.json
          cp firebase-service-account.json deploy/firebase-service-account.json
          
          # EB 설정 파일 복사
          cp -r .ebextensions_dev deploy/.ebextensions
          cp -r .platform deploy/.platform
          
          # 배포 패키지 생성
          cd deploy && zip -r deploy.zip .
        shell: bash

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
          application_name: love-keeper-dev
          environment_name: Love-keeper-dev-env
          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          wait_for_deployment: false